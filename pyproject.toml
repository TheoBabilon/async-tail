[build-system]
requires = ["maturin>=1.1.0,<1.1.1"]
build-backend = "maturin"

[project]
name = "async-tail"
requires-python = ">=3.7"
description = 'tail -f utility library providing both sync and async interfaces'
authors = [
    {name ='Theo BABILON', email = 'theo.babilon@gmail.com'},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Environment :: MacOS X",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Filesystems",
]
dynamic = [
    'license',
    'readme',
    'version'
]

[project.urls]
Homepage = 'https://github.com/theobabilon/async-tail'
Funding = 'https://github.com/sponsors/theobabilon'
Source = 'https://github.com/theobabilon/async-tail'

[tool.maturin]
module-name = "async_tail._async_tail"
bindings = 'pyo3'
sdist-include = ['Cargo.lock']

[tool.pytest.ini_options]
testpaths = 'tests'
log_format = '%(name)s %(levelname)s: %(message)s'
filterwarnings = 'error'
timeout = 10

[tool.coverage.run]
source = ['async_tail']
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'raise NotImplemented',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.black]
color = true
line-length = 120
target-version = ['py39']
skip-string-normalization = true

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
color_output = true

[tool.ruff]
line-length = 120
extend-select = ['Q']
flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}

[tool.mypy]
strict = true
warn_return_any = false
show_error_codes = true

[[tool.mypy.overrides]]
module = ['trio.*']
ignore_missing_imports = true
